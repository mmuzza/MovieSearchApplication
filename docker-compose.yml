# version: '3'

# services:

#   postgres:
#     image: 'postgres:14.5'
#     restart: always
#     environment:
#       POSTGRES_USER: postgres
#       POSTGRES_PASSWORD: postgres
#       POSTGRES_DB: movies
#     logging:
#       options:
#         max-size: 10m
#         max-file: "3"
#     ports:
#       - '5434:5432'
#     volumes:
#       - ./postgres-data:/var/lib/postgresql/data
#       - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql

#       # - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql-
      

    
#   # Further more changes added temporarily
#   backend:
#     image: movies-back-end  # Use your local backend image name
#     environment:
#       - DSN=host=postgres port=5434 user=postgres password=postgres dbname=movies sslmode=disable
#     depends_on:
#       - postgres


version: '3.8'

services:
  postgres:
    image: postgres:14
    container_name: postgres-1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: movies
    ports:
      - "5433:5432"
    volumes:
      - ./postgres-data:/var/lib/postgresql/data  # Persist data on host machine
      - ./sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql  # Run SQL script on initialization
    networks:
      - app-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend-1
    environment:
      DB_HOST: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DB_PASSWORD: postgres
      DB_NAME: movies
    depends_on:
      - postgres
    ports:
      - "8080:8080"
    networks:
      - app-network
    command: ["/wait-for-it.sh", "postgres:5432", "--", "./api"]

networks:
  app-network:
    driver: bridge


